
import React, { useState, useEffect } from 'react';
import { NetworkNode } from '@/entities/all';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';
import { Cpu, MemoryStick, Activity } from 'lucide-react';

const generateMetrics = () => Array.from({ length: 10 }, (_, i) => ({
  time: `-${9 - i}m`,
  cpu: Math.floor(Math.random() * (80 - 40 + 1) + 40),
  memory: Math.floor(Math.random() * (70 - 50 + 1) + 50),
}));

export default function EdgeNodesPage() {
  const [edgeNodes, setEdgeNodes] = useState([]);

  useEffect(() => {
    const fetchNodes = async () => {
      const allNodes = await NetworkNode.list();
      setEdgeNodes(
        allNodes
          .filter(node => node.type === 'edge_computing')
          .map(node => ({ ...node, metrics: generateMetrics() }))
      );
    };
    fetchNodes();
  }, []);

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-3xl font-bold text-white">Monitorizare Noduri Edge Computing</h1>
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {edgeNodes.map(node => (
          <Card key={node.id} className="bg-slate-800/60 border-slate-700">
            <CardHeader className="flex flex-row items-center justify-between">
              <CardTitle className="text-white text-lg">{node.name}</CardTitle>
              <Badge className="bg-green-400/20 text-green-400">{node.status}</Badge>
            </CardHeader>
            <CardContent>
              <div className="flex justify-around mb-4 text-center">
                <div><p className="text-slate-400 text-sm">CPU</p><p className="text-white font-bold text-lg">{node.cpu_usage}%</p></div>
                <div><p className="text-slate-400 text-sm">Memorie</p><p className="text-white font-bold text-lg">{node.memory_usage}%</p></div>
                <div><p className="text-slate-400 text-sm">Trafic</p><p className="text-white font-bold text-lg">{node.network_traffic} Mbps</p></div>
              </div>
              <div className="h-48">
                <ResponsiveContainer width="100%" height="100%">
                  <LineChart data={node.metrics}>
                    <CartesianGrid strokeDasharray="3 3" stroke="#334155" />
                    <XAxis dataKey="time" stroke="#94a3b8" fontSize={12} />
                    <YAxis stroke="#94a3b8" fontSize={12} unit="%" />
                    <Tooltip contentStyle={{ backgroundColor: '#1e293b', border: '1px solid #334155' }} />
                    <Line type="monotone" dataKey="cpu" stroke="#00d4ff" strokeWidth={2} dot={false} name="CPU" />
                    <Line type="monotone" dataKey="memory" stroke="#14b8a6" strokeWidth={2} dot={false} name="Memorie" />
                  </LineChart>
                </ResponsiveContainer>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
}
