import React, { useState, useEffect } from 'react';
import { SecurityThreat } from '@/entities/all';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { motion } from 'framer-motion';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Shield, AlertTriangle, Bug, Lock, Database, CheckCircle, BarChart2 } from 'lucide-react';
import { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from 'recharts';

const getThreatIcon = (type) => {
  const icons = { malware: Bug, intrusion: Shield, ddos: 'Wifi', anomaly: AlertTriangle, unauthorized_access: Lock, data_breach: Database };
  return icons[type] || AlertTriangle;
};

const getSeverityColor = (severity) => ({
  low: "bg-blue-400/20 text-blue-400 border-blue-400/30",
  medium: "bg-yellow-400/20 text-yellow-400 border-yellow-400/30",
  high: "bg-orange-400/20 text-orange-400 border-orange-400/30",
  critical: "bg-red-500/20 text-red-500 border-red-500/30",
});

const getStatusBadge = (status) => ({
  detected: "bg-orange-400/20 text-orange-400",
  analyzing: "bg-blue-400/20 text-blue-400",
  contained: "bg-purple-400/20 text-purple-400",
  resolved: "bg-green-400/20 text-green-400",
});

export default function SecurityCenterPage() {
  const [threats, setThreats] = useState([]);

  useEffect(() => {
    const fetchThreats = async () => setThreats(await SecurityThreat.list('-created_date'));
    fetchThreats();
  }, []);

  const activeThreats = threats.filter(t => ['detected', 'analyzing', 'contained'].includes(t.status));
  
  const severityData = ['critical', 'high', 'medium', 'low'].map(s => ({
    name: s,
    value: activeThreats.filter(t => t.severity === s).length,
  }));
  const COLORS = { critical: '#ef4444', high: '#f97316', medium: '#f59e0b', low: '#3b82f6' };

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-3xl font-bold text-white">Centrul de Securitate Cibernetică</h1>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card className="bg-slate-800/60 border-slate-700">
          <CardHeader><CardTitle className="text-slate-300 text-sm font-medium">Amenințări Active</CardTitle></CardHeader>
          <CardContent><div className="text-4xl font-bold text-white">{activeThreats.length}</div></CardContent>
        </Card>
        <Card className="bg-slate-800/60 border-slate-700">
          <CardHeader><CardTitle className="text-slate-300 text-sm font-medium">Nivel Critic</CardTitle></CardHeader>
          <CardContent><div className="text-4xl font-bold text-red-500">{activeThreats.filter(t => t.severity === 'critical').length}</div></CardContent>
        </Card>
        <Card className="bg-slate-800/60 border-slate-700">
          <CardHeader><CardTitle className="text-slate-300 text-sm font-medium">Rezolvate (24h)</CardTitle></CardHeader>
          <CardContent><div className="text-4xl font-bold text-green-400">12</div></CardContent>
        </Card>
        <Card className="bg-slate-800/60 border-slate-700">
          <CardHeader><CardTitle className="text-slate-300 text-sm font-medium">Scor Securitate AI</CardTitle></CardHeader>
          <CardContent><div className="text-4xl font-bold text-cyan-400">96.8%</div></CardContent>
        </Card>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <div className="lg:col-span-2">
          <Card className="bg-slate-800/60 border-slate-700">
            <CardHeader><CardTitle className="text-white text-xl">Amenințări Active Recente</CardTitle></CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow className="border-slate-700 hover:bg-transparent">
                    <TableHead className="text-slate-300">ID Amenințare</TableHead>
                    <TableHead className="text-slate-300">Severitate</TableHead>
                    <TableHead className="text-slate-300">Tip</TableHead>
                    <TableHead className="text-slate-300">Status</TableHead>
                    <TableHead className="text-slate-300">Detecție</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {activeThreats.map(threat => {
                    const Icon = getThreatIcon(threat.type);
                    return (
                      <TableRow key={threat.id} className="border-slate-700 hover:bg-slate-700/50">
                        <TableCell className="font-medium text-white">{threat.threat_id}</TableCell>
                        <TableCell><Badge className={`${getSeverityColor(threat.severity)[threat.severity]} border`}>{threat.severity}</Badge></TableCell>
                        <TableCell className="text-slate-300 flex items-center gap-2"><Icon className="w-4 h-4" /> {threat.type}</TableCell>
                        <TableCell><Badge className={getStatusBadge(threat.status)[threat.status]}>{threat.status}</Badge></TableCell>
                        <TableCell className="text-slate-400">{new Date(threat.created_date).toLocaleString()}</TableCell>
                      </TableRow>
                    );
                  })}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        </div>
        <div>
          <Card className="bg-slate-800/60 border-slate-700">
            <CardHeader><CardTitle className="text-white text-xl">Distribuție Severitate</CardTitle></CardHeader>
            <CardContent className="h-64">
              <ResponsiveContainer width="100%" height="100%">
                <PieChart>
                  <Pie data={severityData} dataKey="value" nameKey="name" cx="50%" cy="50%" outerRadius={80} label>
                    {severityData.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[entry.name]} />)}
                  </Pie>
                  <Tooltip contentStyle={{ backgroundColor: '#1e293b', border: '1px solid #334155' }} />
                </PieChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
