import React, { useState, useEffect } from 'react';
import { OrchestrationWorkflow } from '@/entities/all';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Workflow, Play, Plus, Zap } from 'lucide-react';

export default function OrchestrationPage() {
  const [workflows, setWorkflows] = useState([]);

  useEffect(() => {
    const fetchWorkflows = async () => setWorkflows(await OrchestrationWorkflow.list());
    fetchWorkflows();
  }, []);

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-3xl font-bold text-white">Orchestrare Automată AI</h1>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="md:col-span-2">
          <Card className="bg-slate-800/60 border-slate-700">
            <CardHeader className="flex flex-row justify-between items-center">
              <CardTitle className="text-white">Fluxuri de Lucru Active</CardTitle>
              <Button size="sm" className="bg-cyan-500 hover:bg-cyan-600"><Plus className="w-4 h-4 mr-2"/>Crează Flux Nou</Button>
            </CardHeader>
            <CardContent className="space-y-4">
              {workflows.map(wf => (
                <div key={wf.id} className="p-4 bg-slate-700/50 border border-slate-600 rounded-lg">
                  <div className="flex justify-between items-center mb-2">
                    <div className="flex items-center gap-3">
                      <Workflow className="w-5 h-5 text-cyan-400"/>
                      <span className="font-semibold text-white">{wf.name}</span>
                      <Badge className={wf.is_active ? "bg-green-500/20 text-green-400" : "bg-slate-500/20 text-slate-400"}>
                        {wf.is_active ? 'Activ' : 'Inactiv'}
                      </Badge>
                    </div>
                    <Button variant="outline" size="sm" className="bg-transparent border-cyan-500 text-cyan-500 hover:bg-cyan-500/10 hover:text-cyan-400">
                      <Play className="w-4 h-4 mr-2"/>Rulează Manual
                    </Button>
                  </div>
                  <p className="text-sm text-slate-400 mb-3">{wf.description}</p>
                  <div className="flex items-center gap-4 text-xs">
                    <span className="text-slate-300">Declanșator: <span className="font-mono bg-slate-600/50 p-1 rounded">{wf.trigger_event}</span></span>
                    <span className="text-slate-300">Pași: <Badge variant="secondary">{wf.steps.length}</Badge></span>
                    <span className="text-slate-300">Ultima Rulare: <Badge className="bg-blue-500/20 text-blue-400">{wf.last_run_status}</Badge></span>
                  </div>
                </div>
              ))}
            </CardContent>
          </Card>
        </div>
        <div>
          <Card className="bg-slate-800/60 border-slate-700">
            <CardHeader><CardTitle className="text-white">Log de Activitate</CardTitle></CardHeader>
            <CardContent className="text-sm text-slate-400">
              <p>[10:45:12] - Flux 'Izolare Nod' rulat cu succes pe 'OT-Controller-PLC1'.</p>
              <p>[10:42:01] - Detectat 'anomaly' pe 'IoT-Gateway-Sensors', declanșat flux 'Analiză Trafic'.</p>
              <p>[10:30:55] - Flux 'Backup Configurație' completat.</p>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
